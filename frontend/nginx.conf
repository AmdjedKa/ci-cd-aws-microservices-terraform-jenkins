server {
    listen 3000;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Enhanced logging for debugging
    error_log  /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;

    # Frontend routes
    location / {
        try_files $uri /index.html;
    }

    # Common CORS configuration for all API routes
    location /api/ {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Add CORS headers for non-OPTIONS requests
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
    }

    # API routing with enhanced proxy configuration
    location /api/auth/ {
        proxy_pass http://auth-service:3001/;
        
        # Common proxy headers
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Additional proxy settings
        proxy_connect_timeout 60;
        proxy_send_timeout 60;
        proxy_read_timeout 60;
        proxy_buffer_size 16k;
        proxy_buffers 4 16k;
        
        # Error handling
        proxy_intercept_errors on;
        error_page 502 = @fallback;
    }

    location /api/projects/ {
        proxy_pass http://project-service:3002/;
        
        # Common proxy headers
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/tasks/ {
        proxy_pass http://task-service:3003/;
        
        # Common proxy headers
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Fallback location for 502 errors
    location @fallback {
        return 502 '{"error": "Backend service temporarily unavailable"}';
        add_header Content-Type application/json;
    }

    # Handle 404 for unmatched API routes
    error_page 404 /index.html;
}